#!/usr/bin/env python

import os
import json
from config0_publisher.utilities import print_json
from config0_publisher.resource_manage import to_jsonfile
from config0_publisher.serialization import b64_encode

terraform_state_file = os.environ.get("TERRAFORM_STATE_FILE","terraform.tfstate")

with open(terraform_state_file) as json_file:
    data = json.load(json_file)

#with open(terraform_state_file) as json_file:
#    raw = json.load(json_file)

if not data:
    print("ERROR - there is no data from {}".format(os.path.join(os.getcwd(),terraform_state_file)))
    exit(9)

aws_type = os.environ.get("AWS_TYPE","aws_s3_bucket")
resource_type = "cloud_storage"
provider = "aws"

keys_to_pass = [ "acl", 
                 "arn",
                 "bucket",
                 "bucket_domain_name",
                 "bucket_regional_domain_name",
                 "hosted_zone_id",
                 "id" ]


for resource in data["resources"]:
    for instance in resource["instances"]:

        if resource["type"] != aws_type: continue

        _results = {}
        for _key,_value in resource["instances"][0]["attributes"].items():
            if _key not in keys_to_pass: continue
            _results[_key] = _value

        _results["name"] = _results["id"]  
        _results["id"] = _results["arn"]  # id is set to the bucket name, but we will use the arn
        _results["_id"] = _results["id"]
        _results["resource_type"] = resource_type
        _results["provider"] = provider
        _results["main"] = True

        try:
            _results["expire_days"] = resource["instances"][0]["attributes"]["lifecycle_rule"][0]["expiration"][0]["days"]
        except:
            pass

        try:
            _results["noncurrent_version_expiration"] = resource["instances"][0]["attributes"]["lifecycle_rule"][0]["noncurrent_version_expiration"][0]["days"]
        except:
            pass

        try:
            _results["encryption"] = resource["instances"][0]["attributes"]["server_side_encryption_configuration"][0]["rule"][0]["apply_server_side_encryption_by_default"][0]["sse_algorithm"]
        except:
            pass

        try:
            _results["bucket_versioning"] = resource["instances"][0]["attributes"]["versioning"][0]["enabled"]
        except:
            pass

        # changed 45234532 - moved over to b64 hash
        #results["raw"] = {"terraform":data}
        _results["raw"] = {"terraform":b64_encode(data)}

        results = _results

        break


# ref 34532045732
to_jsonfile(results,"output.json")
