#!/usr/bin/env python
#
#export DOCKER_BUILD_DIR=${DOCKER_BUILD_DIR:=/var/tmp/docker/build}
#export DOCKER_ENV_FILE=${DOCKER_ENV_FILE:=${DOCKER_BUILD_DIR}/.env}
#export DOCKER_FILE=${DOCKER_FILE:=Dockerfile}
#export DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG:=test}
#export REPOSITORY_URI=${REPOSITORY_URI:=test}
#
## Build with custom image tag
#cd $DOCKER_BUILD_DIR
#echo "execute: docker build -t $REPOSITORY_URI:$DOCKER_IMAGE_TAG . -f $DOCKER_FILE "
#docker build -t $REPOSITORY_URI:$DOCKER_IMAGE_TAG . -f $DOCKER_FILE|| exit 1

import os
import string
import random
import sys
import subprocess

def id_generator(size=8,chars=string.ascii_uppercase+string.digits):
    return ''.join(random.choice(chars) for x in range(size))

def run_cmd(cmd,exit_error=False):

    print('executing cmd "{}"'.format(cmd))

    p = subprocess.Popen(cmd, shell=True, stderr=subprocess.PIPE)

    while True:
        out = p.stderr.read(1)
        if out == '' and p.poll() is not None:
            break
        if out != '':
            sys.stdout.write(out)
            sys.stdout.flush()

    exitcode = p.returncode

    if exitcode == 0: return True

    print('FAILED: executing cmd "{}" failed'.format(cmd))
    print("exitcode {}".format(exitcode))
    if exit_error: exit(exitcode)
    return False

def run(**kwargs):

    docker_image = os.environ.get("DOCKER_IMAGE","elasticdev/terraform-run-env")
    docker_env_file = os.environ.get("DOCKER_ENV_FILE",".env")
    docker_env_fields = os.environ.get("DOCKER_ENV_FIELDS")
    share_dir = os.environ.get("SHARE_DIR","/var/tmp/share")
    stateful_id = os.environ["STATEFUL_ID"]

    stateful_path = os.path.join(share_dir,stateful_id)
    if os.path.exist(stateful_path): os.system("rm -rf {}".format(stateful_path))
    os.system("mkdir -p {}".format(stateful_path))

    if docker_env_fields and docker_env_file:
        with open(docker_env_file,"w") as f:
            for docker_env_field in docker_env_fields:
                if not os.environ.get(docker_env_field.upper()): continue
                f.write("{}={}".format(docker_env_field.upper(),os.environ[docker_env_field.upper()]))
        cmd = 'docker run --env-file {} -it --rm -v {}:{} {}'.format(docker_env_file,stateful_path,share_dir,docker_image)
    else:
        cmd = 'docker run -it --rm -v {}:{} {}'.format(stateful_path,share_dir,docker_image)

    status = run_cmd(cmd,exit_error=None)
    if not status:
        msg = "ERROR: cmd = {} failed!".format(cmd)
        raise Exception(msg)
        #exit(exitcode)

if __name__ == '__main__':
    run()
