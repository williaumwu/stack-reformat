#!/usr/bin/env python

import os
import json
from config0_publisher.resource_manage import to_jsonfile
from config0_publisher.serialization import b64_encode
#from config0_publisher.utilities import print_json

terraform_state_file = os.environ.get("TERRAFORM_STATE_FILE","terraform.tfstate")

with open(terraform_state_file) as json_file:
    data = json.load(json_file)

if not data:
    print("ERROR - there is no data from {}".format(os.path.join(os.getcwd(),terraform_state_file)))
    exit(9)

if os.environ.get("TF_MAIN_NAME"): 
    name = os.environ["TF_MAIN_NAME"]
elif os.environ.get("VPC_ID"): 
    name = "{}-main-sgs-tf".format(os.environ["VPC_ID"])
elif os.environ.get("TF_VAR_vpc_name"):
    name = "{}-main-sgs-tf".format(os.environ["TF_VAR_vpc_name"])
elif os.environ.get("VPC_NAME"):
    name = "{}-main-sgs-tf".format(os.environ["VPC_NAME"])
else:
    name = "main-sgs-tf"

results = {"name":name}
results["resource_type"] = "security_group"
results["provider"] = "aws"
results["main"] = True

# changed 45234532 - moved over to b64 hash
results["raw"] = {"terraform":b64_encode(data)}

if os.environ.get("AWS_DEFAULT_REGION"): 
    results["region"] = os.environ["AWS_DEFAULT_REGION"]
    results["aws_default_region"] = os.environ["AWS_DEFAULT_REGION"]

# ref 34532045732
to_jsonfile(results,"resource.json")
