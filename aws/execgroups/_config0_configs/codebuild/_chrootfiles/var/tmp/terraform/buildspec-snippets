################################################################################################
      #- aws s3 cp /tmp/codebuild.env s3://$S3_BUCKET/$COMMIT_HASH/codebuild.env
      #- docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$COMMIT_HASH
      #- docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      #- git fetch --quiet origin --depth 1
################################################################################################
#env:
#  variables:
#    git_url: "git@github.com:blahblahuser34213/flask_sample.git"
#    s3_input_bucket: flask-sample
#    AWS_DEFAULT_REGION: eu-west-1
#    code_dir: /tmp/code/src
#  parameter-store:
#    ssh_key: codebuild/flask-sample/sshkeys/private
################################################################################################
# buildspec.yml
#- aws s3 sync public/ s3://stagging
#- git fetch origin
#- git branch
#- git checkout -f "$CODEBUILD_RESOLVED_SOURCE_VERSION"
# aws ssm put-parameter --name build_ssh_key --type String --value "$(cat build_ssh_key.pem)"
#
################################################################################################
#
#version: 0.2
#
#env:
#  parameter-store:
#    build_ssh_key: "build_ssh_key"
#
#phases:
#  install:
#    commands:
#      - mkdir -p ~/.ssh
#      - echo "$build_ssh_key" > ~/.ssh/id_rsa
#      - chmod 600 ~/.ssh/id_rsa
#      - ssh-keygen -F github.com || ssh-keyscan github.com >>~/.ssh/known_hosts
#      - git config --global url."git@github.com:".insteadOf "https://github.com/"
#      - mkdir -p ${GOPATH}/src/github.com/a-h/project
#      - cp -r $CODEBUILD_SRC_DIR/* $GOPATH/src/github.com/a-h/project
#      - cd $GOPATH/src/github.com/a-h/project
#
################################################################################################
#version: 0.2
#
#env:
#  variables:
#    AWS_REGION:
#    AWS_ACCOUNT_ID:
#    AWS_SERVICE_NAME:
#    AWS_DOMAIN_NAME: localhost:5000
#    IMAGE_NAME: aws-codebuild-locally-build-docker-image
#    CONTAINER_NAME: aws-codebuild-locally-build-docker-container
#
#
#phases:
#  install:
#    runtime-versions:
#      java: corretto8
#    commands:
#  pre_build:
#    commands:
#      - REPOSITORY_URL="$AWS_ACCOUNT_ID$AWS_SERVICE_NAME$AWS_REGION$AWS_DOMAIN_NAME"
#      - echo $REPOSITORY_URL
#      - echo Setting up docker
#      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
#      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
#      - echo Logging in to Amazon ECR...
##      Commented out because this CodeBuild project won't need to communicate with AWS Services
##      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URL
#  build:
#    commands:
#      - echo Build started on `date`
#      - pwd
#      - ls
#      - 'mvn clean package'
#      - ls
#  post_build:
#    commands:
#      - docker image build -t $IMAGE_NAME .
#      - docker image tag $IMAGE_NAME:latest $REPOSITORY_URL/$IMAGE_NAME:latest
#      - echo image name =  $IMAGE_NAME:latest
#      - echo image url = $REPOSITORY_URL/$IMAGE_NAME:latest
#      - docker push $REPOSITORY_URL/$IMAGE_NAME:latest
#      - echo Writing image definitions file...
#      #       name is a container name from the task definition
#      - printf '[{"name":"'"$CONTAINER_NAME"'","imageUri":"'"$REPOSITORY_URL"'/'"$IMAGE_NAME"':latest"}]' > imagedefinitions.json
#      - cat imagedefinitions.json
#      - echo Build completed on `date`
#############################################
# Snippet Below for submodules
# buildspec.yml
#############################################
#
#version: 0.2
#env:
#  parameter-store:
#    build_ssh_key: "build_ssh_key"
#phases:
#  install:
#    commands:
#      - mkdir -p ~/.ssh
#      - echo "$build_ssh_key" > ~/.ssh/id_rsa
#      - chmod 600 ~/.ssh/id_rsa
#      - ssh-keygen -F github.com || ssh-keyscan github.com >>~/.ssh/known_hosts
#      - git config --global url."git@github.com:".insteadOf "https://github.com/"
#      - mkdir -p ${GOPATH}/src/github.com/a-h/project
#      - cp -r $CODEBUILD_SRC_DIR/* $GOPATH/src/github.com/a-h/project
#      - cd $GOPATH/src/github.com/a-h/project
#      - make get
#  build:
#    commands:
#      - cd $GOPATH/src/github.com/a-h/project
#      - make test
#      - make build
#
#version: 0.2
#env:
#  variables:
#    git_url: "YOUR_GIT_URL (using git@github.com)"
#  parameter-store:
#    ssh_key: id_rsa
#    ssh_pub: id_rsa.pub
#phases:
#  pre_build:
#    commands:   
#      - mkdir -p ~/.ssh
#      - echo "$ssh_key" > ~/.ssh/id_rsa   
#      - echo "$ssh_pub" > ~/.ssh/id_rsa.pub
#      - chmod 600 ~/.ssh/id_rsa
#      - eval "$(ssh-agent -s)"
#      - git init
#      - git remote add origin "$git_url"
#      - git fetch origin
#      - git branch
#      - git checkout -f "$CODEBUILD_RESOLVED_SOURCE_VERSION"
#      - git submodule init
#      - git submodule update --recursive
#  build:
#    commands:
#      # compile and build here...
################################################################################################
#version: 0.2
#
#phases:
#  pre_build:
#    commands:
#      - echo Logging in to Amazon ECR...
#      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
#  build:
#    commands:
#      - echo Build started on `date`
#      - echo Building the Docker image...          
#      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
#      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
#  post_build:
#    commands:
#      - echo Build completed on `date`
#      - echo Pushing the Docker image...
#      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#
################################################################################################
